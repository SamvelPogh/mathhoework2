#ifndef TNAYINNN
#define TNAYINNN
using namespace std;
#include <iostream>
#include <vector>
#include <math.h>

class tnayinnn
{
public:

	void question1();
	void question2();
	void question3();
	void question4();
	void question5();
	void question6();
	void question7();
	void question8();
	void question9();
	void question10();
	void question11();
	void question12();
	void question13();
	void question14();
	void question15(double *,double);
	void question16();
	void question17();
	void question18();
	void question19();
	void question20();
	void question21();
	void question22();
	void question23();
	void question24();
	void question25();
	void question26(int *,int *);
	void question27();
	void question28();
	void question29();
	void question30(double *,double *,int);

};

#include "tnayinnn.h"


void insertfunction(int* arr, int n, int m, int size) {
	for (int i = 0; i < size; ++i) {
		arr[i] = rand() % n + m;
	}

}

void printarr(int arr[], int size) {
	for (int i = 0; i < size; ++i) {
		cout << arr[i] << "  ";
	}
	cout << endl;
}

void insertfunction(double* arr,int size) {
	for (int i = 0; i < size; ++i) {
		arr[i] = (double)(rand() % 10000 - 5000) / 100;
	}

}

void printarr(double arr[], int size) {
	for (int i = 0; i < size; ++i) {
		cout << arr[i] << "  ";
	}
	cout << endl;
}

void bubbleSortbig(double *arr, int low, int high)
{
	int i, j;
	for (i = low; i < high - 1; i++) {
		for (j = low; j < high - i - 1; j++) {
			if (arr[j] > arr[j + 1])
				swap(arr[j], arr[j + 1]);
		}
	}
}
void bubbleSortmin(double arr[], int low, int high)
{
	int i, j;
	for (i = low; i < high - 1; i++) {
		for (j = low; j < high - i - 1; j++) {
			if (arr[j] < arr[j + 1])
				swap(arr[j], arr[j + 1]);
		}
	}
}
void bubbleSortbig(int* arr, int low, int high)
{
	int i, j;
	for (i = low; i < high - 1; i++) {
		for (j = low; j < high - i - 1; j++) {
			if (arr[j] > arr[j + 1])
				swap(arr[j], arr[j + 1]);
		}
	}
}
void bubbleSortmin(int *arr, int low, int high)
{
	int i, j;
	for (i = low; i < high - 1; i++) {
		for (j = low; j < high - i - 1; j++) {
			if (arr[j] < arr[j + 1])
				swap(arr[j], arr[j + 1]);
		}
	}
}
int mijintvabanakan(int arr[], int size) {
	int sum = 0;
	int mijintvabanakan1 = 0;
	for (int i = 0; i < size; ++i) {
		sum += arr[i];
	}
	mijintvabanakan1 = sum / size;
	return mijintvabanakan1;
}
void tnayinnn::question1() {
	int arr1[10]{};
	insertfunction(arr1, 100, 1, 10);
	int arr2[10]{};
	insertfunction(arr2, 200, 59, 10);
	int arr3[10]{};
	for (int i = 0; i < 10; ++i) {
		if (i % 2 == 0) {
			arr3[i] = arr1[i + 1];
		}
		else {
			arr3[i] = arr2[i - 1];
		}
	}

	printarr(arr1, 10);
	printarr(arr2, 10);
	printarr(arr3, 10);


}


void tnayinnn::question2() {
	int arr[8]{};
	insertfunction(arr, 100, 11, 8);
	int arr2[8]{};
	for (int i = 0; i < 8; ++i) {
		arr2[i] = arr[i] % 10;
	}
	printarr(arr, 8);
	printarr(arr2, 8);

}

void tnayinnn::question3() {
	int arr[17]{};
	insertfunction(arr, 100, 11, 17);
	int sum = 0;
	for (int i = 0; i < 17; ++i) {
		sum += arr[i];
	}
	cout << "sum elements array:" << sum;

}


void tnayinnn::question4() {
	double arr1[9]{};
	insertfunction(arr1, 9);
	double arr2[7]{};
	insertfunction(arr2, 7);
	double arr3[16]{};
	int j = 0;
	for (int i = 0; i < 16; ++i) {
		if (i < 9) {
			arr3[i] = arr1[i];
		}
		else {
			arr3[i] = arr2[j];
			++j;
		}
	}

	bubbleSortbig(arr3, 0, 16);
	printarr(arr3, 16);
	
}

void tnayinnn :: question5() {
	int x[10]{};
	insertfunction(x, 100, 1, 10);
	int y[10]{};
	insertfunction(y, 100, 1, 10);
	int n=0;
	int* s = new int(n);
	for (int i = 0; i < 10; ++i) {
		if (x[i] % 10 == x[i]) {
			
			s[n] = x[i];
			++n;
		}
	}
	for (int i = 0; i < 10; ++i) {
		if (y[i] % 10 == y[i]) {
			
			s[n] = y[i];
			++n;
		}
	}
	printarr(x, 10);
	printarr(y, 10);
	printarr(s, n);

}

void tnayinnn::question6() {
	int y[12]{};
	int x[12]{};
	int c[12]{};
	insertfunction(y, 200, 1, 12);

	for (int i = 0; i < 12; ++i) {
		x[i] = pow(y[i], 2) - 2 * y[i] + 19.3 * cos(y[i]);
	}
	printarr(x, 12);
	int mijin = mijintvabanakan(y, 12);
	int n = 0;
	vector<int> arr;
	for (int i = 0; i < 12; ++i) {
		if (y[i] < mijin) {
			c[n] = y[i];
			++n;
			arr.push_back(i);
		}
	}

	for (int i = 0; i < 12; ++i) {
		for (int j = 0; j < arr.size(); ++j) {
			if (arr[j] != i) {
				c[n] = y[i];
				++n;
			}
		}
	}
	printarr(c, 12);
}


void tnayinnn::question7() {
	double z[16]{};
	insertfunction(z, 16);
	int sumevense;
	int sumthree;
	for (int i = 0; i < 16; ++i) {
		if (i % 2 == 0) {
			sumevense += z[i];
		}
		if (i % 3 == 0) {
			sumthree += z[i];
		}
	}
	cout << abs(sumthree - sumevense);
}


void tnayinnn::question8() {
	int r[9]{};
	insertfunction(r, 100, 1, 9);
	int max = 0;
	int maxindex;
	for (int i = 0; i < 9; ++i) {
		if (r[i] > 0 && r[i] % 2 != 0) {
			if (max < r[i]) {
				max = r[i];
				maxindex = i;
			}
		}
	}

	cout << maxindex;
}


void tnayinnn::question9() {
	int x[15]{};
	int y[15]{};
	y[0] = 0;
	for (int i = 0; i < 15; ++i) {
		cin >> x[i];
	}
	for (int i = 1; i < 15; ++i) {
		y[i] = cos(pow(x[i], 2)) + 2.97 * log10(pow(i, 2)) * log10(pow(i, 2));
	}


}

void tnayinnn::question10() {
	int x[17]{};
	int y[17]{};
	for (int i = 0; i < 17; ++i) {
		cin >> x[i];
	}
	for (int i = 0; i < 17; ++i) {
		if (cos(x[i]) > 0) {
			y[i] = pow(x[i], 3) - 7.5;
		}
		else {
			y[i] = pow(x[i], 2) - 5 * pow(2.71828, sin(x[i]));
		}
	}

	printarr(x, 17);
	printarr(y, 17);
}

int sumnums(int x) {
	int sum = 0;
	int n;
	n = x % 10;
	sum += n;
	x -= n;
	n = x % 10;
	sum += n;
}
void tnayinnn::question11() {
	int arr[9]{};
	int arr1[9]{};
	insertfunction(arr, 100, 11, 9);
	int sum=0;
	for (int i = 0; i < 9; ++i) {
		arr1[i] = sumnums(arr[i]);
	}
	printarr(arr, 9);
	printarr(arr1, 9);
}


void tnayinnn::question12() {
	double x[12]{};
	insertfunction(x, 12);
	bubbleSortmin(x, 0, 12);
	printarr(x, 12);
}

void tnayinnn::question13() {
	int x[11]{};
	int sum = 0;
	for (int i = 0; i < 11; ++i) {
		cin >> x[i];
	}
	printarr(x, 11);
	for (int i = 0; i < 11; ++i) {
		if (x[i] < 0 && x[i] % 2 != 0) {
			sum += x[i];
		}
	}
	for (int i = 0; i < 11; ++i) {
		if (x[i] % 3 == 0) {
			x[i] = sum;
		}
	}
	printarr(x, 11);


}

void tnayinnn::question14() {
	double x[14]{};
	insertfunction(x, 14);
	int n = 0, m = 13;
	while (n != 7) {
		swap(x[n], x[m]);
		++n;
		--m;
	}
	cout << " changed 7";
}


void tnayinnn::question15(double *arr,double s) {

	double maxdev=abs(arr[0]-s);
	int maxdevindex=0;
	for (int i = 1; i < 15; ++i) {
		if (arr[i] - s > maxdev) {
			maxdev = arr[i] - s;
			maxdevindex = i;
		}
	}
	cout << "max distance index:" << maxdevindex;

}

void tnayinnn :: question16() {
	int x[10]{};
	insertfunction(x, 500, -500, 10);
	int sum=0;
	for (int i = 0; i < 10; ++i) {
		if (x[i] > 0) {
			sum += x[i];
		}
		else {
			break;
		}
	}
	cout << "sum elements do <0::" << sum;
}

void tnayinnn::question17() {
	int x[15]{};
	insertfunction(x, 100, 1, 15);
	int count = 0;
	for (int i = 1; i < 15; i += 2) {
		if (x[i] < x[i + 1] && x[i] < x[i - 1]) {
			++count;
		}
	}

	cout << "chislo lokalnix minimumov:" << count;

}


void tnayinnn::question18() {
	int x[15]{};
	insertfunction(x, 100, 1, 15);
	int count = 0;
	for (int i = 1; i < 15; i += 2) {
		if (x[i] > x[i + 1] && x[i] > x[i - 1]) {
			++count;
		}
	}

	cout << "count lokal maximums:" << count;

}

void tnayinnn::question19() {
	int z[15]{};
	int indexzero = -1;
	int indexnegativ = -1;
	int sum = 0;
	insertfunction(z, 500, -500, 15);
	for (int i = 0; i < 15; ++i) {
		if (z[i] < 0) {
			indexnegativ = i;
			break;
		}
		if (z[i] == 0) indexzero = i;
	}

	if (indexzero != -1) {
		for (int i = indexzero; i < indexnegativ; ++i) {
			sum += z[i];
		}
	}
	cout << sum;
}

void tnayinnn::question20() {
	int x[50]{};
	vector<int> arr;
	insertfunction(x, 100, 1000, 50);
	for (int i = 0; i < 50; ++i) {
		if (x[i] > x[i + 1]) {
			arr.push_back(i);
		}
	}
	for (int i = 0; i < arr.size(); ++i) {
		cout << arr[i] << "   ";
	}
}


void tnayinnn::question21() {
	int x[10]{};
	int count = 0;
	insertfunction(x, 100, 1, 10);
	for (int i = 0; i < 10; ++i) {
		for (int j = i + 1; j < 10; ++j) {
			if (x[i] == x[j]) {
				if (count > 1) {
					x[i] = -1;
					x[j] = -1;
				}
			}
		}
	}
}

void tnayinnn::question22() {
	int x[10]{};
	int y[10]{};
	int n = 0;
	insertfunction(x, 500, -500, 10);
	for (int i = 0; i < 10; ++i) {
		if (x[i] <= 0) {
			y[n] = x[i];
			++n;
		}
	}

	for (int i = 0; i < 10; ++i) {
		if (x[i] > 0) {
			y[n] = x[i];
			++n;
		}
	}
}


void tnayinnn::question23() {
	int x[10]{};
	int y[10]{};
	int s1 = 1, s2 = 1;
	insertfunction(x, 100, 1, 10);
for (int i = 0; i < 10; ++i) {
	y[i] = pow(x[i], 2) + 0.3;
}

for (int i = 0; i < 10; ++i) {
	if (i % 2 == 0) {
		s2 *= x[i] * y[i];
	}
	else {
		s1 *= x[i] * y[i];
	}
}
cout << s1 / s2;
}

int diferentnums(int x) {
	int sum = 0;
	int n;
	n = x % 10;
	sum += n;
	x -= n;
	n = x % 10;
	sum -= n;
}
void tnayinnn::question24() {
	int x[10]{};
	int y[10]{};
	insertfunction(x, 100, 11, 10);
	for (int i = 0; i < 10; ++i) {
		y[i] = diferentnums(x[i]);
	}
	printarr(y, 10);
}


void tnayinnn::question25() {
	int x[15]{};
	int n = 0;
	insertfunction(x, 500, -500, 15);
	for (int i = 0; i < 10; ++i) {
		if (x[i] <= 0) {
			x[n] = x[i];
			++n;
		}
	}
	int indexendminus = n;

	for (int i = 0; i < 10; ++i) {
		if (x[i] > 0) {
			x[n] = x[i];
			++n;
		}
	}
	bubbleSortbig(x, 0, n);
	bubbleSortmin(x, n+1, 9);

}

void tnayinnn::question26(int *x,int* y) {
	for (int i = 0; i < 12; ++i) {
		for (int j = i; j < 12; ++j) {
			if (x[i] == y[i]) {
				x[i] = 0;
				break;
			}
		}
	}

}

void tnayinnn::question27() {
	int x[50]{};
	int n = 1;
	insertfunction(x, 1000, 500, 50);
	for (int i = 0; i < 50; ++i) {
		while (x[i] > x[n]) {
			++n;
		}
		cout << i << '-' << n;
	}
}


void tnayinnn::question28() {
	int x[50]{};
	int sumevens = 0, sumnotevens = 0;
	insertfunction(x, 1000, 500, 50);
	for (int i = 0; i < 50; ++i) {
		if (i % 2 == 0) {
			sumevens += x[i];
		}
		else {
			sumnotevens += x[i];
		}
	}
	cout << sumevens / sumnotevens;
}

void tnayinnn::question29() {
	int x[50]{};
	int count = 0;
	insertfunction(x, 1000, 500, 50);
	int mijin=mijintvabanakan(x, 50);
	for (int i = 0; i < 50; ++i) {
		if (x[i] > mijin) {
			++count;
		}
	}
	cout << count /2;
}

void tnayinnn::question30(double *x,double *y,int size) {
	int indexmax1, indexmax2;
	double max1 = x[0],
		double max2 = y[0];
	for (int i = 0; i < size; ++i) {
		if (x[i] > max1) {
			max1 = x[i];
			indexmax1 = i;
		}
		if (y[i] > max2) {
			max2 = y[i];
			indexmax2 = i;
		}
	}

	double max = x[indexmax1];
	x[indexmax1] = y[indexmax2];
	y[indexmax2] = max;
}

#endif // !TNAYIN
